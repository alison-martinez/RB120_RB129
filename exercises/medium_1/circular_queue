class CircularQueue
  attr_reader :queue_array

  def initialize(size)
    @buffer_size = size
    @queue_array = Array.new(size)
  end

  def enqueue(num)
    @queue_array << nil if @queue_array.length < @buffer_size
    if @queue_array.index(nil)
      index = @queue_array.index(nil)
      @queue_array[index] = num
    else
      self.dequeue
      @queue_array << num
    end
  end

  def dequeue
    @queue_array.shift
  end

end

queue = CircularQueue.new(3)
puts queue.dequeue == nil


queue.enqueue(1)
queue.enqueue(2)

puts queue.dequeue == 1


queue.enqueue(3)
queue.enqueue(4)

puts queue.dequeue == 2

queue.enqueue(5)
queue.enqueue(6)
queue.enqueue(7)
puts queue.dequeue == 5
puts queue.dequeue == 6
puts queue.dequeue == 7
puts queue.dequeue == nil

queue = CircularQueue.new(4)
puts queue.dequeue == nil

queue.enqueue(1)
queue.enqueue(2)
puts queue.dequeue == 1

queue.enqueue(3)
queue.enqueue(4)
puts queue.dequeue == 2

queue.enqueue(5)
queue.enqueue(6)
queue.enqueue(7)
puts queue.dequeue == 4
puts queue.dequeue == 5
puts queue.dequeue == 6
puts queue.dequeue == 7
puts queue.dequeue == nil